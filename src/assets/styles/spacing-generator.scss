/*
This will help you to create spacing classes for margin and padding.

Eg: mt-0 , pl-5
  
The first letter represents the spacing type ( Margin/Padding ).
m:  margin 
p:  padding 

The second letter represents the direction.
l: left
r: right
t: top
b: bottom
v: vertical (top and bottom)
h: horizontal (left and right)
a: all

The third represents the spacing value (which you can give your own)

For eg: 'mb-0' means margin-bottom: 0;
*/

$spacing: 1, 2, 3, 4, 5; // Modify this to generate your spacing classes
$unit: rem; // Modify this to specify your unit eg: em, pt, %.
$scale: 0.5;
$directions: (
  l: left,
  t: top,
  r: right,
  b: bottom,
  v: top,
  h: left,
);
@mixin generateSpacing($prop, $short) {
  @each $space in $spacing {
    .#{$short}a-#{$space} {
      #{$prop}: $space * $scale + $unit;
    }
    @each $key, $val in $directions {
      .#{$short}#{$key}-#{$space} {
        #{$prop}-#{$val}: $space * $scale + $unit;
        @if $key == v {
          #{$prop}-bottom: $space * $scale + $unit;
        }
        @if $key == h {
          #{$prop}-right: $space * $scale + $unit;
        }
      }
    }
  }
}
@include generateSpacing(padding, p);
@include generateSpacing(margin, m);

.m-a {
  margin: auto;
}

.center {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}
